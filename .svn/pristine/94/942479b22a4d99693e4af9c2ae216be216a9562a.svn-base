package omniapi

//import nayax.Picture;
import omniapi.Device.DeviceType;

import org.apache.commons.codec.binary.Base64;
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import com.twilio.sdk.TwilioRestClient;
import com.twilio.sdk.resource.factory.MessageFactory
import com.twilio.sdk.resource.instance.Message;

import grails.transaction.Transactional

@Transactional
class ApiService {
	def smsService
	def twilio_apiID = 'AC02df9ce1610adb63ea980d363d435b16'//'ACcfd1847026a68c27fa2b90b9fa48d008'
	def twilio_apiPass = '0a14bd65dfe9978f8a0547905503c67d'//'858d0a2577486912879e5feb5ffe70de'
	
	
	def serviceMethod() {

    }
	
	/*def sendVerificationCode(){
		def map = [to:"+919000520792",from:"+14154231013",body:"SMS TEST"]
		smsService.send(map)

	}*/
	
	public Boolean saveObject(def obj) {
		log.trace "Inside saveObject for ${obj}"
		if (obj.validate()) {
			log.trace "Object validated."
			obj.errors.allErrors.each { log.error it }
			obj.save(flush:true)
			return true
		} else {
			log.trace "Object validation failed."
			obj.errors.allErrors.each { log.error it }
			obj.discard()
			return false
		}
	}
	
	def populateUser(def request){
		def json = request.JSON
        Device device = new Device (deviceType:DeviceType.valueOf(json.deviceType), token:json.deviceToken)
		Picture picture 
		if(json.image){
			byte[] imageByteArray = Base64.decodeBase64(json.image);
			picture= saveImage(imageByteArray)
		}
		
		User user = new User(firstName: json.firstName,
			lastName:json.lastName,
			email:json.email,
			phone: json.phone,
			fid:json.fid,
			device:device, 
			picture: picture)
		return user
	}
	
	
	private Picture saveImage(byte[] imageByteArray) {
		def multipartFile = request.getFile("image");
		def userId = params.userId
		User user = User.findById(userId);
		Picture picture
		//log.info("File type/name : "+ multipartFile.getContentType()+":"+multipartFile.getOriginalFilename())
		//if (multipartFile.getContentType() in ['image/jpeg', 'image/gif', 'image/png', 'image/bmp', 'image/jpg']) {
		def filename = UUID.randomUUID().toString()
		def fileExtension = '.jpg'
		//def originalFilename = multipartFile.getOriginalFilename()
		//def fileExtension = originalFilename.substring(originalFilename.lastIndexOf("."), originalFilename.length())
		def fullFilePath = ConfigurationHolder.config.pictureLocation+filename+fileExtension
		FileOutputStream imageOutFile = new FileOutputStream(
			fullFilePath);
		imageOutFile.write(imageByteArray);
		imageOutFile.close();
		  
		picture = new Picture(mimeType: fileExtension,
			filename: filename+fileExtension,
			filePath: fullFilePath)
		
		if (picture.validate()) {
			picture.save()
			user.picture = picture
			user.save()
			//TODO - thumbnail
			//File targetThumbNailFile = new File(ConfigurationHolder.config.pictureLocation, 'tn_' +filename +fileExtension )
			//def thumbnailImage = imageService.getThumbNail(targetFile, ConfigurationHolder.config.pictureWidth as Integer)
			//ImageIO.write(thumbnailImage, fileExtension.substring(1), targetThumbNailFile);
		}
		return picture
	}
	
	def sendVerificationCode(def to) {
		TwilioRestClient client = new TwilioRestClient(twilio_apiID, twilio_apiPass);
		VerificationCode verificationCode = new VerificationCode(phone:to, code:'898989')
		saveObject(verificationCode)
	   
		 // Build the parameters
		 List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
		 nameValuePairs.add(new BasicNameValuePair("From", "+14154231013"));
		 nameValuePairs.add(new BasicNameValuePair("To", to ));//"+919000520792"));
		 nameValuePairs.add(new BasicNameValuePair("Body", "Here is your verification code - 898989"));
		 //params.add(new BasicNameValuePair("MediaUrl", "http://farm2.static.flickr.com/1075/1404618563_3ed9a44a3a.jpg"));
	   
		 MessageFactory messageFactory = client.getAccount().getMessageFactory();
		 Message message = messageFactory.create(nameValuePairs);
		 log.trace(message.getSid());
	   }
	
	def confirmVerificationCode(def json){
		def results = VerificationCode.findWhere(phone: json.phone, code: json.code)
		return results !=null
	}
}
